# Generated by Django 2.0.2 on 2018-03-23 03:39

from django.conf import settings
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import recipes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('name',),
                'default_related_name': 'foods',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.Food')),
            ],
            options={
                'default_related_name': 'ingredients',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('instructions', models.TextField()),
                ('foods', models.ManyToManyField(related_name='recipes', through='recipes.Ingredient', to='recipes.Food')),
            ],
            options={
                'ordering': ('name',),
                'default_related_name': 'recipes',
            },
        ),
        migrations.CreateModel(
            name='RecipeNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('updated_ts', models.DateTimeField(auto_now=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='recipes.Recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_ts',),
                'default_related_name': 'notes',
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.Recipe'),
        ),
        migrations.CreateModel(
            name='RecipeRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='recipes.Recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'ratings',
            },
        ),
        migrations.CreateModel(
            name='RecipeReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(blank=True, null=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='recipes.Recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('make_again', models.BooleanField()),
                ('rating', models.IntegerField()),
            ],
            options={
                'default_related_name': 'reviews',
            },
        ),
        migrations.AlterUniqueTogether(
            name='recipereview',
            unique_together={('recipe', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='reciperating',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='recipe',
            name='photo',
            field=models.ImageField(blank=True, default='photos/no-image.jpg', null=True, upload_to='photos'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='num_ratings',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='recipe',
            name='num_reviews',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='recipe',
            name='total_rating',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_type', models.CharField(choices=[('QUANTITY', 'QUANTITY'), ('WEIGHT', 'WEIGHT'), ('VOLUME', 'VOLUME')], max_length=255)),
                ('measurement_unit', models.CharField(choices=[('TEASPOON', 'TEASPOON'), ('TABLESPOON', 'TABLESPOON'), ('CUP', 'CUP'), ('PINT', 'PINT'), ('QUART', 'QUART'), ('GALLON', 'GALLON'), ('OUNCE', 'OUNCE'), ('POUND', 'POUND')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementConversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=3, max_digits=6)),
                ('volume', models.DecimalField(decimal_places=3, max_digits=6)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurement_conversions', to='recipes.Food')),
                ('volume_measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volume_measurement_conversions', to='recipes.Measurement')),
                ('weight_measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight_measurement_conversions', to='recipes.Measurement')),
            ],
            options={
                'default_related_name': 'measurement_conversions',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=6)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='recipes.Food')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='recipes.Measurement')),
            ],
            options={
                'default_related_name': 'products',
            },
        ),
        migrations.AlterModelManagers(
            name='recipe',
            managers=[
                ('objects', recipes.models.RecipeManager()),
            ],
        ),
        migrations.AddField(
            model_name='ingredient',
            name='amount',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='rank',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='measurement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingredients', to='recipes.Measurement'),
        ),
        migrations.AlterUniqueTogether(
            name='ingredient',
            unique_together={('recipe', 'food', 'rank')},
        ),
        migrations.AddField(
            model_name='food',
            name='allergens',
            field=models.ManyToManyField(blank=True, related_name='foods', to='recipes.Allergen'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='instructions',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.RenameField(
            model_name='recipe',
            old_name='num_ratings',
            new_name='total_ratings',
        ),
        migrations.AlterField(
            model_name='recipe',
            name='total_ratings',
            field=models.IntegerField(default=0, editable=False),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='num_reviews',
            field=models.IntegerField(default=0, editable=False),
        ),
        migrations.RemoveField(
            model_name='recipe',
            name='total_rating',
        ),
        migrations.AddField(
            model_name='recipe',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='reciperating',
            name='recipe',
        ),
        migrations.RemoveField(
            model_name='reciperating',
            name='user',
        ),
        migrations.DeleteModel(
            name='RecipeRating',
        ),
        migrations.AddField(
            model_name='recipe',
            name='total_make_again',
            field=models.IntegerField(default=0, editable=False),
        ),
    ]
